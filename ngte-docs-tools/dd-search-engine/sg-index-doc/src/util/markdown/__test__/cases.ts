export const rawMdText = `![返回目录](https://user-images.githubusercontent.com/5803001/38079637-ff0abcf0-3371-11e8-9b76-ad651620afc7.jpg)](https://github.com/wxyyxc1992/Awesome-Lists)# React Syntax Links | React 基础语法资料索引This post aggregates curated popular links for learning React Syntax. More reference about ITCS can turn to [Awesome Links: Guide to Galaxy](https://github.com/wxyyxc1992/Awesome-Lists), which collects valuable, popular and up-to-date links for CS, including Programming Language, Software Engineering, Server Side Application, Infrastructure, InfoSecurity, Industrial Application, DataScienceAI, Frontend Technology(iOS, Android, RN, Electron), etc.# Component | 组件* [2017-How Pure CSS Images Helped Me Understand React Components](https://parg.co/bL6): How did I overcome impostor syndrome and finally learn React? There are a few reasons but one of the most significant ones was learning how to make pure CSS images.* [2017-Convert React.createClass to ES6 Class](https://daveceddia.com/convert-createclass-to-es6-class/): As of React 15.5, createClass is deprecated. You’ll get warnings in the console if you’re using it in your code – and, when React 16 comes out, createClass will be removed entirely.## Syntax | 组件语法* [2015-React Components, Elements, and Instances](https://facebook.github.io/react/blog/2015/12/18/react-components-elements-and-instances.html)- JSX: [JSX Specification](https://facebook.github.io/jsx/), [JSX In Depth](https://facebook.github.io/react/docs/jsx-in-depth.html), [Conditional Rendering](http://reactpatterns.com/#conditional-rendering), [2015-WTF is JSX](https://jasonformat.com/wtf-is-jsx/)* [2016-React Elements and React Components](https://medium.freecodecamp.com/react-elements-vs-react-components-fdc776705880#.nlfh4ingc)## LifeCycle* [2017-React’s Component Lifecycles](https://medium.com/mofed/reacts-component-lifecycles-adf0ebc89d23#.79hd0xcxd)* [2017-React Lifecycle Methods- how and when to use them](https://parg.co/bCT): The above is the life of a React component, from birth (pre-mounting) and death (unmounting).## Error Boundary* [2018-Handling Errors in React Components with Error Boundaries](https://dev.to/sarah_chima/error-boundaries-in-react-3eib): Error Boundaries are React Components and they catch error anywhere in their child component tree.# Component Dataflow | 组件数据流* [2017-React 组件间通讯](http://www.tuicool.com/articles/6fayIbq)## Props* [function-as-child-components](https://medium.com/@iammerrick/function-as-child-components-5f3920a9ace9#.4dpp6haq9)- [React Patterns：Children 相关](http://reactpatterns.com/#stateless-function)* [A deep dive into children in React](https://mxstbr.blog/2017/02/react-children-deepdive/)* [Function as Child Components](http://merrickchristensen.com/articles/function-as-child-components.html)## State* [2017-Atomic SetState Updates in React](https://alligator.io/react/getting-atomic-updates-with-setstate)* [2018-ReactStateMuseum](https://github.com/GantMan/ReactStateMuseum): A whirlwind tour of React state management systems by example.## Context* [React’s ⚛️ new Context API](https://parg.co/UXl): It’s way more ergonomic, it’s no longer “experimental,” and it’s now a first-class api! OH, AND IT USES A RENDER PROP!# Style | 样式处理## CSS* [SurviveJS: Styling React](http://survivejs.com/react/advanced-techniques/styling-react/)- [react-functional-css-protips](https://github.com/chibicode/react-functional-css-protips)## CSS-in-JS* [journey-to-enjoyable-maintainable-styling-with-react-itcss-and-css-in-js](https://medium.com/maintainable-react-apps/journey-to-enjoyable-maintainable-styling-with-react-itcss-and-css-in-js-632cfa9c70d6#.msehhtt3j)## Styled Components* [A 5 Minute Intro To Styled Components](https://medium.freecodecamp.com/a-5-minute-intro-to-styled-components-41f40eb7cd55)* [2017-Embracing the power of styled-components](https://parg.co/bID): What we learned in the first week moving away from CSS Modules.* [2017-styled-media-query #Project# ](https://github.com/morajabi/styled-media-query): Beautiful media queries better than CSS @media for styled-components with ability to specify custom breakpoints.* [2017-Jest Styled Components #Project# ](https://parg.co/b1D): A set of utilities for testing Styled Components with Jest. This package improves the snapshot testing experience and provides a brand new matcher to make expectations on the style rules.* [2017-Quick Tip: How to Style React Components with styled-components](https://www.sitepoint.com/style-react-component`;

export const simpleTitle = 'I am title';

export const titleWithType = 'I am title #Book#';

export const titleWithYear = '2017-I am title';

export const titleWithYearAndType = '2017-I am title #Book#';
